#!/usr/bin/env python
from os import environ, mkdir
from os.path import join, exists, basename
from glob import iglob
from argparse import ArgumentParser
from subprocess import call

try: topdir = environ['BOSS_SPECTRO_REDUX']
except: topdir = None

try: run2d = environ['RUN2D']
except: run2d =  None

parser = ArgumentParser()
parser.add_argument("-l", "--lite", help="pass in the coadd option for lite spectra",action="store_true")
parser.add_argument("-M", "--mjd", help="mjd from which we reformat_spectra", type=int) 
arg = parser.parse_args()

reduxdir = join(topdir,run2d) if topdir and run2d else None
spall = join(reduxdir,'spAll-%s.fits' % run2d) if reduxdir and run2d else None
spectradir = join(reduxdir, 'spectra')
if arg.lite: spectradir = join(spectradir, 'lite')

plates = []
if exists(reduxdir):
    spall = join(reduxdir,'spAll-%s.fits' % run2d)
    if exists(spall):
        for dir in iglob(join(reduxdir,'*')):
            try:
                platestr = basename(dir)
                plate = int(platestr)
                #if not exists(join(spectradir,str(plate))): plates.append(plate)
                if exists(join(dir,'spPlate-%s-%d.fits'%(platestr, arg.mjd))): plates.append(plate)
            except: pass
        info = {'spall':spall,'spectradir':spectradir}
    else: print "Cannot find spall file at %r" % spall
else: print "Please load the correct eboss module"

if plates:
    if not exists(spectradir):
        mkdir(spectradir)
        print "CREATE %s" % spectradir
    for plate in plates:
        info['plate'] = plate
        info['mjd'] = arg.mjd
        info['coadd'] = '--coadd' if arg.lite else ''
        script = "reformat_spectra.py -p %(plate)i -M %(mjd)i --spall %(spall)s %(coadd)s --outdir %(spectradir)s" % info
        call([script], shell=True)

