#!/usr/bin/env bash
#
#  Start the daily BOSS spectro pipeline.  This script is passed onto rundaily by 
#  uurundaily_cron using  "uurundaily_script $MJD" where $MJD is the mjd to process.
#
#  Written by Gary Kushner (LBL).  Jan 2010.

function usage
{
    local execName=$(basename $0)
    ( 
	echo "UURUNDAILY_SCRIPT: usage $execName \$MJD [noupdate] [observatory]"
    ) >&2
    exit 1
}

function screamAndDie
{
    echo "UURUNDAILY_SCRIPT:  Failed $*" | tee -a $LOGDIR/$MJD.warning

    echo "UURUNDAILY_SCRIPT: Failing"

	#  Make it easy to see the failure
	echo "UURUNDAILY_SCRIPT: Failed!" >>$LOGDIR/$MJD.failed
	
	### This hack is too ugly, need to change it ###
	echo "UURUNDAILY_SCRIPT: Mailing Error Report"
    mail -s "$MJD${lco_l}${daily_l} failed" hjibarram@gmail.com < $LOGDIR/$MJD.warning
    mail -s "$MJD${lco_l}${daily_l} failed" smorris0@illinois.edu < $LOGDIR/$MJD.warning
    exit 1
}

function printAndRun
{
    echo "UURUNDAILY_SCRIPT: Checkpoint at $(date)"
    echo UURUNDAILY_SCRIPT: "$@"

# 	if "$dryMode"; then
#		return
#	fi
		
    # Silently do nothing
    if test "_$*" = "_"; then
        return
    fi
    eval "$@"
 
    if test $? -ne 0; then
        screamAndDie "failed running $*"
    fi
}


function tryAndRun
{
    echo "$*"

# 	if "$dryMode"; then
#		return
#	fi
		
    # Silently do nothing
    if test "_$*" = "_"; then
        return
    fi

    eval "$@"
}

function svnUp
{
	echo "UURUNDAILY_SCRIPT: Attempting to svn "
	
	tryAndRun "svn up $1"
	if test $? == 0; then
		return
        fi
        echo "UURUNDAILY_SCRIPT: ssh-add -l"
        ssh-add -l
	echo "UURUNDAILY_SCRIPT: svn up $1 failed.  Going to try a cleanup." | tee -a $LOGDIR/$MJD.warning
	tryAndRun "sleep 600"
	tryAndRun "svn cleanup $1"
	printAndRun "svn up $1"
}

function sdss3rsync
{
        echo "UURUNDAILY_SCRIPT: Attempting to rsync MIRROR"

        tryAndRun "rsync -aLrvz --password-file $SDSS3_PASSWD_FILE $1"
        if test $? == 0; then
                return
        fi
        echo "UURUNDAILY_SCRIPT: rsync MIRROR failed. Attempting to rsync MAIN"  | tee -a $LOGDIR/$MJD.warning
        printAndRun "rsync -aLrvz --password-file $SDSS3_PASSWD_FILE $2"
}

#
###	 Start of script
#

###	 Parse command line

update=true
lco=false
daily=false

while getopts "ldnm:" argname; do
    case $argname in
      n) update=false ;;
      l) lco=true ;;
      d) daily=true ;;
      m) MJD=${OPTARG};;
      *) usage
    esac
done

if $lco; then
    lco_l="/LCO"
else
    lco_l="/APO"
fi

if $daily; then
    daily_l="/DAILY"
else
    daily_l="/MASTER"
fi

###  Start logging

LOGDIR=$HOME/daily/logs${lco_l}${daily_l}
exec >>$LOGDIR/$MJD.log 2>&1
echo "UURUNDAILY_SCRIPT: Starting at $(date), processing $MJD"

if $daily; then
    module switch bhm bhm/daily
else
    module switch bhm bhm/master
fi
module list
shopt -s expand_aliases

###  Sanity Checks

if test -z $IDLSPEC2D_DIR; then
	screamAndDie "idlspec2d must be setup"
fi

###  Setup environment variables

#  Determine idlspec2d version and set
spec2d=$(perl -p -e 's{.*/(.*)$}{\1}' <<< $IDLSPEC2D_DIR)
echo "UURUNDAILY_SCRIPT: Using idlspec2d version $spec2d"

###
###  Start of main processing
###

echo "UURUNDAILY_SCRIPT: Running IDL Pipeline"
flag_obs=""
if $lco; then
    flag_obs=", /lco"
fi
flag_plate=""
if [ "$MJD" -lt 59450 ]; then
    flag_plate=", /plate_s"
fi
printAndRun "idl -e 'spplan2d$flag_plate$flag_obs, MJD=$MJD '"
printAndRun "idl -e 'spplan1d$flag_plate$flag_obs, MJD=$MJD '"
UUBATCHPBS="uubatchpbs, /slurm, /daily, /verbose, /MWM_fluxer$flag_plate$flag_obs, /skip_specprimary, /no_reject, qos='-fast', pbs_walltime='20:00:00', pbs_nodes=1, MJD=$MJD "
printAndRun 'idl -e "$UUBATCHPBS" '



###  All Done
echo "UURUNDAILY_SCRIPT: Completing at $(date)"

###  This is a TEMPORARY hack just to make sure things are looking ok! hibarram@illinois.edu
#grep 'UUBATCHPBS' $LOGDIR/$MJD.log | mail -s "$UUBATCHPBS"  hjibarram@gmail.com
grep 'UUBATCHPBS' $LOGDIR/$MJD.log | mail -s "$UUBATCHPBS"  smorris0@illinois.edu
