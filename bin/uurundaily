#!/usr/bin/env bash
#
#  Setup the environment to run dailyrun in either cron mode or daemon mode
#
#  Written by Gary Kushner (LBL).  Feb 2010.

function usage
{
    local execName=$(basename $0)
    ( 
	echo "usage: $execName -e -t"
	echo
	echo "   -d    run in quasi-daemon mode, sleeping 10 minutes (default) between invocations"
	echo "   -s    Don't setup products"
	echo "   -h    this help"
	echo "   -p    poll delay in seconds (default 600)"
	echo " "
	echo "   -g    go.  Go must be specified.  This is to prevent accidentally running $execName."
    echo "   -t    run daily tagged version"
    echo "   -l    run for LCO"
    ) >&2
    exit 1
}

function screamAndDie
{
    echo "Failed: $*"

    echo "Goodbye!"
    exit 1
}

function printAndRun
{
    echo "$*"

# 	if "$dryMode"; then
#		return
#	fi
		
    # Silently do nothing
    if test "_$*" = "_"; then
        return
    fi

    eval "$@"
    if test $? -ne 0; then
        screamAndDie "failed running $*"
    fi
}


###
###  Start of script
###

###  Parse Options

delay=600
daemon=false
pwfile=""
skipSetups=true
go=false
daily=false
lco=false
run2d=''

while getopts "sdgtlp:r:" argname; do
    case $argname in
      d) daemon=true ;;
      s) skipSetups=true ;;
      g) go=true ;;
      p) delay=$OPTARG ;;
      l) lco=true ;;
      t) daily=true ;;
      r) run2d=$OPTARG ;;
      *) usage
    esac
done
shift $((OPTIND-1))

###  Good to go?
if ! "$go"; then
	usage
fi

### Say hello Gracie

echo "UURUNDAILY: Starting at $(date)"

###	Setup eups products

#if ! "$skipSetups"; then
#    printAndRun "module purge"
#    printAndRun "module load bhm/master"
#    printAndRun "module switch bhm bhm/master"
#    printAndRun "module load trac"
#fi

if "$daily"; then
    daily_log="_daily"
    daily_cmd=" -d"
else
    daily_log=""
    daily_cmd=""
fi

if "$lco"; then
    lco_log="_lco"
    lco_cmd=" -l"
else
    lco_log=""
    lco_cmd=""
fi

if [ $run2d != "" ];  then
    run2d_log="_"$run2d
else
    run2d_log=""
fi

###  Setup python options
export PYTHONUNBUFFERED=1
#export DAILY_BOSS_SPECTRO_DATA=$BOSS_SPECTRO_DATA


###  If not daemon mode, run once and exit
if ! "$daemon"; then
	export DAILY_BOSS_SPECTRO_DATA=$BOSS_SPECTRO_DATA_N
	exec $HOME/daily/cmd/rundaily -m $HOME/daily/etc/nextmjd${daily_log}${lco_log}${run2d_log} -s $HOME/daily/cmd/uurundaily_script -p $HOME/daily/etc/wiki $lco_cmd $daily_cmd
    echo "Sleeping for $delay seconds at $(date)"
    sleep $delay
fi

###	 Run in daemonish mode
while true; do
	export DAILY_BOSS_SPECTRO_DATA=$BOSS_SPECTRO_DATA_N
	$HOME/daily/cmd/rundaily -m $HOME/daily/etc/nextmjd${daily_log}${lco_log}${run2d_log} -s $HOME/daily/cmd/uurundaily_script -p $HOME/daily/etc/wiki $lco_cmd $daily_cmd
	echo "Sleeping for $delay seconds at $(date)"
	sleep $delay
done

echo "UURUNDAILY: Completing at $(date)"

