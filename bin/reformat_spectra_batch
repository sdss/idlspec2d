#!/usr/bin/env python
from os import environ, mkdir, makedirs
from os.path import join, exists, basename
from glob import iglob, glob
from argparse import ArgumentParser

try: topdir = environ['BOSS_SPECTRO_REDUX']
except: topdir = None

try: run2d = environ['RUN2D']
except: run2d =  None

parser = ArgumentParser()
parser.add_argument("-l", "--lite", help="pass in the coadd option for lite spectra",action="store_true")
parser.add_argument("-u", "--update", action='store_true', help="update missing plates; don't overwrite others")
arg = parser.parse_args()

reduxdir = join(topdir,run2d) if topdir and run2d else None
spall = join(reduxdir,'spAll-%s.fits' % run2d) if reduxdir and run2d else None
spectradir = join(reduxdir, 'spectra')
if arg.lite: 
    spectradir = join(spectradir, 'lite')
else:
    spectradir = join(spectradir, 'full')

plates = []
if exists(reduxdir):
    spall = join(reduxdir,'spAll-%s.fits' % run2d)
    if exists(spall):
        for dir in iglob(join(reduxdir,'*')):
            try: 
                platestr = basename(dir)
                plate = int(platestr)
                if len( glob( join(dir, 'spPlate-%s-*.fits'%platestr)))>0 : plates.append(plate)
            except: pass
        info = {'spall':spall,'spectradir':spectradir}
    else: print "Cannot find spall file at %r" % spall
else: print "Please load the correct eboss module"

if plates:
    if not exists(spectradir):
        makedirs(spectradir)
        print "CREATE %s" % spectradir
    from pbs import queue
    queue = queue()
    queue.verbose = True
    queue.create(label='eboss_spectra',nodes=9,ppn=16,walltime='336:00:00',alloc='sdss-kp')
    for plate in plates:
        info['plate'] = plate
        info['coadd'] = '--coadd' if arg.lite else ''
        info['update'] = '-u' if arg.update else ''
        script = "reformat_spectra.py -p %(plate)i --spall %(spall)s %(coadd)s --outdir %(spectradir)s %(update)s" % info
        print script
        queue.append(script)
    queue.commit(hard=True,submit=True)
